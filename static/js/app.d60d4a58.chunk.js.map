{"version":3,"sources":["src/words.js","src/common/shuffle.js","src/gameLogic.js","src/common/WebKeyboardListener.web.js","src/common/LabelButton.js","src/common/Container.js","src/Level.js","src/Menu.js","src/Verbal.js","App.js","web-build/register-service-worker.js"],"names":["words","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","mangle","word","index","letter1","letter2","slice","misspell","result","getRandomIndexes","HAS_TOUCH_SCREEN","hasTouchScreen","navigator","maxTouchPoints","msMaxTouchPoints","mQ","window","matchMedia","media","matches","UA","userAgent","test","detectTouchScreen","WebKeyboardListener","componentDidMount","a","async","document","addEventListener","_onKeyDown","componentWillUnmount","removeEventListener","evt","key","props","inputKey","onKeyPress","View","this","children","React","getStyle","type","styles","positive","negative","neutral","LabelButton","onPress","label","disabled","style","Text","StyleSheet","create","padding","color","fontSize","Container","container","subcontainer","flex","justifyContent","marginHorizontal","height","maxWidth","width","InputElement","buttonLabel","inputContainer","Menu","state","mistakes","isShowingAnswer","isCorrect","_onTimeout","continueGame","_onContinue","game","turns","onComplete","setState","_onPress","response","incorrect","_timeoutID","setTimeout","_onPositivePress","_onNegativePress","_renderIcon","answerText","answerIcon","buttons","hContainer","text","answerContainer","textAlign","marginTop","marginBottom","flexDirection","margin","alignItems","setGame","options","map","getGamePlan","name","labelButton","alignSelf","OPTIONS","explanation","getMangledWordGamePlan","englishWords","filter","Verbal","useState","top","postMessage","location","href","App","serviceWorker","register","scope","then","info","catch","error","console"],"mappings":"4JA2+BeA,G,MAz+BD,CACZ,MACA,KACA,KACA,MACA,IACA,KACA,KACA,KACA,MACA,OACA,KACA,MACA,MACA,KACA,MACA,OACA,KACA,IACA,MACA,OACA,KACA,KACA,MACA,OACA,OACA,OACA,KACA,MACA,KACA,MACA,OACA,MACA,OACA,OACA,KACA,MACA,MACA,QACA,OACA,MACA,QACA,OACA,KACA,MACA,OACA,MACA,OACA,KACA,OACA,MACA,QACA,KACA,QACA,OACA,KACA,OACA,MACA,QACA,OACA,OACA,OACA,QACA,QACA,OACA,KACA,QACA,MACA,OACA,OACA,QACA,MACA,MACA,MACA,MACA,OACA,OACA,MACA,QACA,KACA,OACA,MACA,SACA,QACA,KACA,OACA,SACA,KACA,OACA,OACA,QACA,OACA,OACA,QACA,MACA,MACA,OACA,OACA,OACA,MACA,OACA,MACA,MACA,OACA,OACA,OACA,MACA,QACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,QACA,MACA,OACA,OACA,OACA,QACA,OACA,KACA,OACA,MACA,QACA,OACA,OACA,UACA,OACA,OACA,WACA,QACA,QACA,MACA,OACA,MACA,OACA,SACA,OACA,QACA,OACA,OACA,SACA,OACA,QACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,QACA,OACA,MACA,OACA,OACA,OACA,QACA,MACA,MACA,OACA,OACA,OACA,OACA,QACA,QACA,MACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,SACA,MACA,MACA,MACA,MACA,SACA,OACA,QACA,OACA,MACA,OACA,QACA,UACA,MACA,KACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,OACA,QACA,SACA,OACA,QACA,MACA,OACA,SACA,UACA,QACA,SACA,SACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,MACA,OACA,UACA,QACA,OACA,MACA,QACA,OACA,MACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,QACA,QACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,QACA,QACA,QACA,QACA,OACA,OACA,MACA,QACA,OACA,OACA,WACA,OACA,QACA,WACA,QACA,MACA,OACA,UACA,OACA,QACA,QACA,SACA,QACA,QACA,OACA,OACA,QACA,SACA,QACA,OACA,QACA,MACA,OACA,OACA,SACA,OACA,QACA,OACA,UACA,MACA,OACA,SACA,QACA,OACA,OACA,WACA,OACA,OACA,OACA,OACA,QACA,MACA,OACA,QACA,QACA,OACA,OACA,OACA,SACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,MACA,OACA,SACA,OACA,OACA,OACA,OACA,OACA,MACA,SACA,SACA,OACA,QACA,OACA,UACA,OACA,UACA,QACA,QACA,UACA,QACA,OACA,WACA,SACA,WACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,UACA,QACA,OACA,OACA,OACA,QACA,MACA,QACA,OACA,QACA,QACA,OACA,OACA,SACA,OACA,SACA,UACA,OACA,WACA,OACA,QACA,OACA,OACA,SACA,WACA,QACA,OACA,OACA,OACA,SACA,MACA,QACA,SACA,OACA,UACA,MACA,SACA,UACA,QACA,SACA,MACA,MACA,UACA,UACA,OACA,SACA,OACA,SACA,QACA,QACA,SACA,OACA,MACA,OACA,OACA,SACA,OACA,OACA,SACA,QACA,OACA,QACA,OACA,OACA,UACA,MACA,OACA,OACA,MACA,OACA,UACA,OACA,OACA,OACA,SACA,OACA,MACA,OACA,QACA,OACA,UACA,OACA,QACA,OACA,SACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,OACA,QACA,KACA,QACA,UACA,QACA,OACA,OACA,SACA,SACA,UACA,OACA,SACA,QACA,OACA,UACA,OACA,SACA,OACA,WACA,UACA,SACA,OACA,QACA,OACA,QACA,OACA,SACA,SACA,UACA,OACA,OACA,SACA,OACA,SACA,OACA,OACA,SACA,OACA,SACA,OACA,WACA,QACA,QACA,MACA,SACA,QACA,WACA,MACA,MACA,QACA,OACA,QACA,SACA,MACA,OACA,UACA,OACA,OACA,OACA,QACA,MACA,UACA,OACA,OACA,QACA,WACA,QACA,QACA,OACA,MACA,OACA,OACA,QACA,KACA,UACA,QACA,QACA,SACA,WACA,MACA,OACA,OACA,WACA,OACA,OACA,SACA,QACA,SACA,UACA,MACA,SACA,SACA,OACA,UACA,SACA,WACA,OACA,UACA,OACA,SACA,QACA,SACA,SACA,SACA,YACA,MACA,UACA,SACA,SACA,OACA,WACA,MACA,UACA,MACA,OACA,OACA,UACA,WACA,SACA,MACA,OACA,SACA,QACA,SACA,QACA,QACA,QACA,OACA,MACA,WACA,OACA,QACA,QACA,OACA,MACA,QACA,MACA,SACA,MACA,UACA,OACA,aACA,OACA,QACA,QACA,MACA,MACA,OACA,OACA,QACA,OACA,OACA,MACA,SACA,MACA,UACA,QACA,UACA,OACA,SACA,QACA,OACA,SACA,SACA,UACA,OACA,OACA,OACA,QACA,UACA,OACA,OACA,MACA,QACA,QACA,QACA,UACA,OACA,QACA,YACA,QACA,QACA,OACA,OACA,WACA,OACA,QACA,SACA,SACA,OACA,OACA,OACA,MACA,UACA,WACA,OACA,MACA,MACA,QACA,OACA,SACA,SACA,OACA,OACA,OACA,OACA,cACA,SACA,WACA,QACA,QACA,MACA,OACA,SACA,UACA,OACA,QACA,MACA,OACA,QACA,QACA,OACA,SACA,OACA,MACA,OACA,SACA,QACA,OACA,SACA,UACA,QACA,WACA,YACA,SACA,aACA,OACA,QACA,SACA,QACA,MACA,MACA,UACA,QACA,QACA,WACA,QACA,QACA,OACA,QACA,OACA,SACA,OACA,MACA,aACA,SACA,MACA,OACA,SACA,QACA,OACA,SACA,OACA,QACA,SACA,OACA,QACA,SACA,OACA,SACA,UACA,MACA,QACA,QACA,SACA,MACA,QACA,UACA,QACA,SACA,QACA,OACA,OACA,OACA,UACA,QACA,QACA,OACA,OACA,OACA,MACA,OACA,MACA,QACA,QACA,OACA,OACA,MACA,OACA,OACA,OACA,OACA,QACA,OACA,SACA,QACA,OACA,SACA,OACA,MACA,OACA,OACA,OACA,UACA,OACA,UACA,UACA,SACA,QACA,UACA,WACA,WACA,YACA,SACA,SACA,UACA,OACA,QACA,SACA,OACA,YACA,SACA,SACA,SACA,WACA,QACA,QACA,OACA,QACA,UACA,SACA,WACA,SACA,OACA,SACA,UACA,MACA,UACA,SACA,QACA,SACA,OACA,OACA,UACA,UACA,QACA,OACA,UACA,QACA,SACA,QACA,OACA,QACA,UACA,UACA,UACA,QACA,YACA,QACA,OACA,SACA,WACA,OACA,MACA,SACA,QACA,OACA,UACA,OACA,SACA,OACA,SACA,OACA,MACA,OACA,SACA,SACA,SACA,OACA,QACA,OACA,WACA,SACA,QACA,QACA,SACA,QACA,OACA,MACA,QACA,QACA,QACA,SACA,OACA,SACA,MACA,QACA,QACA,OACA,OACA,SACA,OACA,UACA,OACA,OACA,WACA,QACA,QACA,MACA,OACA,UACA,UACA,WACA,QACA,aACA,OACA,OACA,OACA,WACA,OACA,OACA,WACA,SACA,UACA,OACA,SACA,SACA,OACA,YACA,QACA,OACA,QACA,QACA,QACA,SACA,SACA,OACA,UACA,QACA,QACA,WACA,SACA,WACA,SACA,QACA,OACA,SACA,UACA,QACA,UACA,OACA,OACA,SACA,QACA,QACA,YACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,WACA,SACA,SACA,QACA,SACA,QACA,SACA,aACA,MACA,SACA,OACA,SACA,QACA,UACA,UACA,UACA,QACA,aACA,QACA,QACA,SACA,MACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,QACA,UACA,YACA,OACA,OACA,QACA,QACA,QACA,SACA,MACA,SACA,OACA,SACA,SACA,QACA,SACA,QACA,WACA,QACA,YACA,QA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","file":"static/js/app.d60d4a58.chunk.js","sourcesContent":["// @flow\n\nconst words = [\n  \"the\",\n  \"of\",\n  \"to\",\n  \"and\",\n  \"a\",\n  \"in\",\n  \"is\",\n  \"it\",\n  \"you\",\n  \"that\",\n  \"he\",\n  \"was\",\n  \"for\",\n  \"on\",\n  \"are\",\n  \"with\",\n  \"as\",\n  \"I\",\n  \"his\",\n  \"they\",\n  \"be\",\n  \"at\",\n  \"one\",\n  \"have\",\n  \"this\",\n  \"from\",\n  \"or\",\n  \"had\",\n  \"by\",\n  \"not\",\n  \"word\",\n  \"but\",\n  \"what\",\n  \"some\",\n  \"we\",\n  \"can\",\n  \"out\",\n  \"other\",\n  \"were\",\n  \"all\",\n  \"there\",\n  \"when\",\n  \"up\",\n  \"use\",\n  \"your\",\n  \"how\",\n  \"said\",\n  \"an\",\n  \"each\",\n  \"she\",\n  \"which\",\n  \"do\",\n  \"their\",\n  \"time\",\n  \"if\",\n  \"will\",\n  \"way\",\n  \"about\",\n  \"many\",\n  \"then\",\n  \"them\",\n  \"write\",\n  \"would\",\n  \"like\",\n  \"so\",\n  \"these\",\n  \"her\",\n  \"long\",\n  \"make\",\n  \"thing\",\n  \"see\",\n  \"him\",\n  \"two\",\n  \"has\",\n  \"look\",\n  \"more\",\n  \"day\",\n  \"could\",\n  \"go\",\n  \"come\",\n  \"did\",\n  \"number\",\n  \"sound\",\n  \"no\",\n  \"most\",\n  \"people\",\n  \"my\",\n  \"over\",\n  \"know\",\n  \"water\",\n  \"than\",\n  \"call\",\n  \"first\",\n  \"who\",\n  \"may\",\n  \"down\",\n  \"side\",\n  \"been\",\n  \"now\",\n  \"find\",\n  \"any\",\n  \"new\",\n  \"work\",\n  \"part\",\n  \"take\",\n  \"get\",\n  \"place\",\n  \"made\",\n  \"live\",\n  \"where\",\n  \"after\",\n  \"back\",\n  \"little\",\n  \"only\",\n  \"round\",\n  \"man\",\n  \"year\",\n  \"came\",\n  \"show\",\n  \"every\",\n  \"good\",\n  \"me\",\n  \"give\",\n  \"our\",\n  \"under\",\n  \"name\",\n  \"very\",\n  \"through\",\n  \"just\",\n  \"form\",\n  \"sentence\",\n  \"great\",\n  \"think\",\n  \"say\",\n  \"help\",\n  \"low\",\n  \"line\",\n  \"differ\",\n  \"turn\",\n  \"cause\",\n  \"much\",\n  \"mean\",\n  \"before\",\n  \"move\",\n  \"right\",\n  \"boy\",\n  \"old\",\n  \"too\",\n  \"same\",\n  \"tell\",\n  \"does\",\n  \"set\",\n  \"three\",\n  \"want\",\n  \"air\",\n  \"well\",\n  \"also\",\n  \"play\",\n  \"small\",\n  \"end\",\n  \"put\",\n  \"home\",\n  \"read\",\n  \"hand\",\n  \"port\",\n  \"large\",\n  \"spell\",\n  \"add\",\n  \"even\",\n  \"land\",\n  \"here\",\n  \"must\",\n  \"big\",\n  \"high\",\n  \"such\",\n  \"follow\",\n  \"act\",\n  \"why\",\n  \"ask\",\n  \"men\",\n  \"change\",\n  \"went\",\n  \"light\",\n  \"kind\",\n  \"off\",\n  \"need\",\n  \"house\",\n  \"picture\",\n  \"try\",\n  \"us\",\n  \"again\",\n  \"animal\",\n  \"point\",\n  \"mother\",\n  \"world\",\n  \"near\",\n  \"build\",\n  \"self\",\n  \"earth\",\n  \"father\",\n  \"head\",\n  \"stand\",\n  \"own\",\n  \"page\",\n  \"should\",\n  \"country\",\n  \"found\",\n  \"answer\",\n  \"school\",\n  \"grow\",\n  \"study\",\n  \"still\",\n  \"learn\",\n  \"plant\",\n  \"cover\",\n  \"food\",\n  \"sun\",\n  \"four\",\n  \"between\",\n  \"state\",\n  \"keep\",\n  \"eye\",\n  \"never\",\n  \"last\",\n  \"let\",\n  \"thought\",\n  \"city\",\n  \"tree\",\n  \"cross\",\n  \"farm\",\n  \"hard\",\n  \"start\",\n  \"might\",\n  \"story\",\n  \"saw\",\n  \"far\",\n  \"sea\",\n  \"draw\",\n  \"left\",\n  \"late\",\n  \"run\",\n  \"while\",\n  \"press\",\n  \"close\",\n  \"night\",\n  \"real\",\n  \"life\",\n  \"few\",\n  \"north\",\n  \"open\",\n  \"seem\",\n  \"together\",\n  \"next\",\n  \"white\",\n  \"children\",\n  \"begin\",\n  \"got\",\n  \"walk\",\n  \"example\",\n  \"ease\",\n  \"paper\",\n  \"group\",\n  \"always\",\n  \"music\",\n  \"those\",\n  \"both\",\n  \"mark\",\n  \"often\",\n  \"letter\",\n  \"until\",\n  \"mile\",\n  \"river\",\n  \"car\",\n  \"feet\",\n  \"care\",\n  \"second\",\n  \"book\",\n  \"carry\",\n  \"took\",\n  \"science\",\n  \"eat\",\n  \"room\",\n  \"friend\",\n  \"began\",\n  \"idea\",\n  \"fish\",\n  \"mountain\",\n  \"stop\",\n  \"once\",\n  \"base\",\n  \"hear\",\n  \"horse\",\n  \"cut\",\n  \"sure\",\n  \"watch\",\n  \"color\",\n  \"face\",\n  \"wood\",\n  \"main\",\n  \"enough\",\n  \"plain\",\n  \"girl\",\n  \"usual\",\n  \"young\",\n  \"ready\",\n  \"above\",\n  \"ever\",\n  \"red\",\n  \"list\",\n  \"though\",\n  \"feel\",\n  \"talk\",\n  \"bird\",\n  \"soon\",\n  \"body\",\n  \"dog\",\n  \"family\",\n  \"direct\",\n  \"pose\",\n  \"leave\",\n  \"song\",\n  \"measure\",\n  \"door\",\n  \"product\",\n  \"black\",\n  \"short\",\n  \"numeral\",\n  \"class\",\n  \"wind\",\n  \"question\",\n  \"happen\",\n  \"complete\",\n  \"ship\",\n  \"area\",\n  \"half\",\n  \"rock\",\n  \"order\",\n  \"fire\",\n  \"south\",\n  \"problem\",\n  \"piece\",\n  \"told\",\n  \"knew\",\n  \"pass\",\n  \"since\",\n  \"top\",\n  \"whole\",\n  \"king\",\n  \"space\",\n  \"heard\",\n  \"best\",\n  \"hour\",\n  \"better\",\n  \"true\",\n  \"during\",\n  \"hundred\",\n  \"five\",\n  \"remember\",\n  \"step\",\n  \"early\",\n  \"hold\",\n  \"west\",\n  \"ground\",\n  \"interest\",\n  \"reach\",\n  \"fast\",\n  \"verb\",\n  \"sing\",\n  \"listen\",\n  \"six\",\n  \"table\",\n  \"travel\",\n  \"less\",\n  \"morning\",\n  \"ten\",\n  \"simple\",\n  \"several\",\n  \"vowel\",\n  \"toward\",\n  \"war\",\n  \"lay\",\n  \"against\",\n  \"pattern\",\n  \"slow\",\n  \"center\",\n  \"love\",\n  \"person\",\n  \"money\",\n  \"serve\",\n  \"appear\",\n  \"road\",\n  \"map\",\n  \"rain\",\n  \"rule\",\n  \"govern\",\n  \"pull\",\n  \"cold\",\n  \"notice\",\n  \"voice\",\n  \"unit\",\n  \"power\",\n  \"town\",\n  \"fine\",\n  \"certain\",\n  \"fly\",\n  \"fall\",\n  \"lead\",\n  \"cry\",\n  \"dark\",\n  \"machine\",\n  \"note\",\n  \"wait\",\n  \"plan\",\n  \"figure\",\n  \"star\",\n  \"box\",\n  \"noun\",\n  \"field\",\n  \"rest\",\n  \"correct\",\n  \"able\",\n  \"pound\",\n  \"done\",\n  \"beauty\",\n  \"drive\",\n  \"stood\",\n  \"contain\",\n  \"front\",\n  \"teach\",\n  \"week\",\n  \"final\",\n  \"gave\",\n  \"green\",\n  \"oh\",\n  \"quick\",\n  \"develop\",\n  \"ocean\",\n  \"warm\",\n  \"free\",\n  \"minute\",\n  \"strong\",\n  \"special\",\n  \"mind\",\n  \"behind\",\n  \"clear\",\n  \"tail\",\n  \"produce\",\n  \"fact\",\n  \"street\",\n  \"inch\",\n  \"multiply\",\n  \"nothing\",\n  \"course\",\n  \"stay\",\n  \"wheel\",\n  \"full\",\n  \"force\",\n  \"blue\",\n  \"object\",\n  \"decide\",\n  \"surface\",\n  \"deep\",\n  \"moon\",\n  \"island\",\n  \"foot\",\n  \"system\",\n  \"busy\",\n  \"test\",\n  \"record\",\n  \"boat\",\n  \"common\",\n  \"gold\",\n  \"possible\",\n  \"plane\",\n  \"stead\",\n  \"dry\",\n  \"wonder\",\n  \"laugh\",\n  \"thousand\",\n  \"ago\",\n  \"ran\",\n  \"check\",\n  \"game\",\n  \"shape\",\n  \"equate\",\n  \"hot\",\n  \"miss\",\n  \"brought\",\n  \"heat\",\n  \"snow\",\n  \"tire\",\n  \"bring\",\n  \"yes\",\n  \"distant\",\n  \"fill\",\n  \"east\",\n  \"paint\",\n  \"language\",\n  \"among\",\n  \"grand\",\n  \"ball\",\n  \"yet\",\n  \"wave\",\n  \"drop\",\n  \"heart\",\n  \"am\",\n  \"present\",\n  \"heavy\",\n  \"dance\",\n  \"engine\",\n  \"position\",\n  \"arm\",\n  \"wide\",\n  \"sail\",\n  \"material\",\n  \"size\",\n  \"vary\",\n  \"settle\",\n  \"speak\",\n  \"weight\",\n  \"general\",\n  \"ice\",\n  \"matter\",\n  \"circle\",\n  \"pair\",\n  \"include\",\n  \"divide\",\n  \"syllable\",\n  \"felt\",\n  \"perhaps\",\n  \"pick\",\n  \"sudden\",\n  \"count\",\n  \"square\",\n  \"reason\",\n  \"length\",\n  \"represent\",\n  \"art\",\n  \"subject\",\n  \"region\",\n  \"energy\",\n  \"hunt\",\n  \"probable\",\n  \"bed\",\n  \"brother\",\n  \"egg\",\n  \"ride\",\n  \"cell\",\n  \"believe\",\n  \"fraction\",\n  \"forest\",\n  \"sit\",\n  \"race\",\n  \"window\",\n  \"store\",\n  \"summer\",\n  \"train\",\n  \"sleep\",\n  \"prove\",\n  \"lone\",\n  \"leg\",\n  \"exercise\",\n  \"wall\",\n  \"catch\",\n  \"mount\",\n  \"wish\",\n  \"sky\",\n  \"board\",\n  \"joy\",\n  \"winter\",\n  \"sat\",\n  \"written\",\n  \"wild\",\n  \"instrument\",\n  \"kept\",\n  \"glass\",\n  \"grass\",\n  \"cow\",\n  \"job\",\n  \"edge\",\n  \"sign\",\n  \"visit\",\n  \"past\",\n  \"soft\",\n  \"fun\",\n  \"bright\",\n  \"gas\",\n  \"weather\",\n  \"month\",\n  \"million\",\n  \"bear\",\n  \"finish\",\n  \"happy\",\n  \"hope\",\n  \"flower\",\n  \"clothe\",\n  \"strange\",\n  \"gone\",\n  \"jump\",\n  \"baby\",\n  \"eight\",\n  \"village\",\n  \"meet\",\n  \"root\",\n  \"buy\",\n  \"raise\",\n  \"solve\",\n  \"metal\",\n  \"whether\",\n  \"push\",\n  \"seven\",\n  \"paragraph\",\n  \"third\",\n  \"shall\",\n  \"held\",\n  \"hair\",\n  \"describe\",\n  \"cook\",\n  \"floor\",\n  \"either\",\n  \"result\",\n  \"burn\",\n  \"hill\",\n  \"safe\",\n  \"cat\",\n  \"century\",\n  \"consider\",\n  \"type\",\n  \"law\",\n  \"bit\",\n  \"coast\",\n  \"copy\",\n  \"phrase\",\n  \"silent\",\n  \"tall\",\n  \"sand\",\n  \"soil\",\n  \"roll\",\n  \"temperature\",\n  \"finger\",\n  \"industry\",\n  \"value\",\n  \"fight\",\n  \"lie\",\n  \"beat\",\n  \"excite\",\n  \"natural\",\n  \"view\",\n  \"sense\",\n  \"ear\",\n  \"else\",\n  \"quite\",\n  \"broke\",\n  \"case\",\n  \"middle\",\n  \"kill\",\n  \"son\",\n  \"lake\",\n  \"moment\",\n  \"scale\",\n  \"loud\",\n  \"spring\",\n  \"observe\",\n  \"child\",\n  \"straight\",\n  \"consonant\",\n  \"nation\",\n  \"dictionary\",\n  \"milk\",\n  \"speed\",\n  \"method\",\n  \"organ\",\n  \"pay\",\n  \"age\",\n  \"section\",\n  \"dress\",\n  \"cloud\",\n  \"surprise\",\n  \"quiet\",\n  \"stone\",\n  \"tiny\",\n  \"climb\",\n  \"cool\",\n  \"design\",\n  \"poor\",\n  \"lot\",\n  \"experiment\",\n  \"bottom\",\n  \"key\",\n  \"iron\",\n  \"single\",\n  \"stick\",\n  \"flat\",\n  \"twenty\",\n  \"skin\",\n  \"smile\",\n  \"crease\",\n  \"hole\",\n  \"trade\",\n  \"melody\",\n  \"trip\",\n  \"office\",\n  \"receive\",\n  \"row\",\n  \"mouth\",\n  \"exact\",\n  \"symbol\",\n  \"die\",\n  \"least\",\n  \"trouble\",\n  \"shout\",\n  \"except\",\n  \"wrote\",\n  \"seed\",\n  \"tone\",\n  \"join\",\n  \"suggest\",\n  \"clean\",\n  \"break\",\n  \"lady\",\n  \"yard\",\n  \"rise\",\n  \"bad\",\n  \"blow\",\n  \"oil\",\n  \"blood\",\n  \"touch\",\n  \"grew\",\n  \"cent\",\n  \"mix\",\n  \"team\",\n  \"wire\",\n  \"cost\",\n  \"lost\",\n  \"brown\",\n  \"wear\",\n  \"garden\",\n  \"equal\",\n  \"sent\",\n  \"choose\",\n  \"fell\",\n  \"fit\",\n  \"flow\",\n  \"fair\",\n  \"bank\",\n  \"collect\",\n  \"save\",\n  \"control\",\n  \"decimal\",\n  \"gentle\",\n  \"woman\",\n  \"captain\",\n  \"practice\",\n  \"separate\",\n  \"difficult\",\n  \"doctor\",\n  \"please\",\n  \"protect\",\n  \"noon\",\n  \"whose\",\n  \"locate\",\n  \"ring\",\n  \"character\",\n  \"insect\",\n  \"caught\",\n  \"period\",\n  \"indicate\",\n  \"radio\",\n  \"spoke\",\n  \"atom\",\n  \"human\",\n  \"history\",\n  \"effect\",\n  \"electric\",\n  \"expect\",\n  \"crop\",\n  \"modern\",\n  \"element\",\n  \"hit\",\n  \"student\",\n  \"corner\",\n  \"party\",\n  \"supply\",\n  \"bone\",\n  \"rail\",\n  \"imagine\",\n  \"provide\",\n  \"agree\",\n  \"thus\",\n  \"capital\",\n  \"chair\",\n  \"danger\",\n  \"fruit\",\n  \"rich\",\n  \"thick\",\n  \"soldier\",\n  \"process\",\n  \"operate\",\n  \"guess\",\n  \"necessary\",\n  \"sharp\",\n  \"wing\",\n  \"create\",\n  \"neighbor\",\n  \"wash\",\n  \"bat\",\n  \"rather\",\n  \"crowd\",\n  \"corn\",\n  \"compare\",\n  \"poem\",\n  \"string\",\n  \"bell\",\n  \"depend\",\n  \"meat\",\n  \"rub\",\n  \"tube\",\n  \"famous\",\n  \"dollar\",\n  \"stream\",\n  \"fear\",\n  \"sight\",\n  \"thin\",\n  \"triangle\",\n  \"planet\",\n  \"hurry\",\n  \"chief\",\n  \"colony\",\n  \"clock\",\n  \"mine\",\n  \"tie\",\n  \"enter\",\n  \"major\",\n  \"fresh\",\n  \"search\",\n  \"send\",\n  \"yellow\",\n  \"gun\",\n  \"allow\",\n  \"print\",\n  \"dead\",\n  \"spot\",\n  \"desert\",\n  \"suit\",\n  \"current\",\n  \"lift\",\n  \"rose\",\n  \"continue\",\n  \"block\",\n  \"chart\",\n  \"hat\",\n  \"sell\",\n  \"success\",\n  \"company\",\n  \"subtract\",\n  \"event\",\n  \"particular\",\n  \"deal\",\n  \"swim\",\n  \"term\",\n  \"opposite\",\n  \"wife\",\n  \"shoe\",\n  \"shoulder\",\n  \"spread\",\n  \"arrange\",\n  \"camp\",\n  \"invent\",\n  \"cotton\",\n  \"born\",\n  \"determine\",\n  \"quart\",\n  \"nine\",\n  \"truck\",\n  \"noise\",\n  \"level\",\n  \"chance\",\n  \"gather\",\n  \"shop\",\n  \"stretch\",\n  \"throw\",\n  \"shine\",\n  \"property\",\n  \"column\",\n  \"molecule\",\n  \"select\",\n  \"wrong\",\n  \"gray\",\n  \"repeat\",\n  \"require\",\n  \"broad\",\n  \"prepare\",\n  \"salt\",\n  \"nose\",\n  \"plural\",\n  \"anger\",\n  \"claim\",\n  \"continent\",\n  \"oxygen\",\n  \"sugar\",\n  \"death\",\n  \"pretty\",\n  \"skill\",\n  \"women\",\n  \"season\",\n  \"solution\",\n  \"magnet\",\n  \"silver\",\n  \"thank\",\n  \"branch\",\n  \"match\",\n  \"suffix\",\n  \"especially\",\n  \"fig\",\n  \"afraid\",\n  \"huge\",\n  \"sister\",\n  \"steel\",\n  \"discuss\",\n  \"forward\",\n  \"similar\",\n  \"guide\",\n  \"experience\",\n  \"score\",\n  \"apple\",\n  \"bought\",\n  \"led\",\n  \"pitch\",\n  \"coat\",\n  \"mass\",\n  \"card\",\n  \"band\",\n  \"rope\",\n  \"slip\",\n  \"win\",\n  \"dream\",\n  \"evening\",\n  \"condition\",\n  \"feed\",\n  \"tool\",\n  \"total\",\n  \"basic\",\n  \"smell\",\n  \"valley\",\n  \"nor\",\n  \"double\",\n  \"seat\",\n  \"arrive\",\n  \"master\",\n  \"track\",\n  \"parent\",\n  \"shore\",\n  \"division\",\n  \"sheet\",\n  \"substance\",\n  \"favor\",\n  \"connect\",\n  \"post\",\n  \"spend\",\n  \"chord\",\n  \"fat\",\n  \"glad\",\n  \"original\",\n  \"share\",\n  \"station\",\n  \"dad\",\n  \"bread\",\n  \"charge\",\n  \"proper\",\n  \"bar\",\n  \"offer\",\n  \"segment\",\n  \"slave\",\n  \"duck\",\n  \"instant\",\n  \"market\",\n  \"degree\",\n  \"populate\",\n  \"chick\",\n  \"dear\",\n  \"enemy\",\n  \"reply\",\n  \"drink\",\n  \"occur\",\n  \"support\",\n  \"speech\",\n  \"nature\",\n  \"range\",\n  \"steam\",\n  \"motion\",\n  \"path\",\n  \"liquid\",\n  \"log\",\n  \"meant\",\n  \"quotient\",\n  \"teeth\",\n  \"shell\",\n  \"neck\",\n];\n\nexport default words;\n","export default function shuffle<T>(array: Array<T>): Array<T> {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n","// @flow\nimport type { VerbalGame } from \"./types\";\nimport englishWords from \"./words\";\nimport shuffle from \"./common/shuffle\";\n\nfunction mangle(word: string, index: number): string {\n  const letter1 = word[index];\n  const letter2 = word[index + 1];\n  return word.slice(0, index) + letter2 + letter1 + word.slice(index + 2);\n}\n\nfunction misspell(word: string): string {\n  const index = Math.floor(Math.random() * (word.length - 1));\n  const result = mangle(word, index);\n  if (result == word) {\n    if (index == 0) {\n      return mangle(word, 1);\n    }\n    return mangle(word, index - 1);\n  }\n  return result;\n}\n\nfunction getRandomIndexes(length: number): Array<boolean> {\n  let random = [];\n  for (let index = 0; index < length; index++) {\n    random[index] = index < length / 2;\n  }\n  return shuffle(random);\n}\n\nexport function getMangledWordGamePlan(\n  words: Array<string>,\n  length: number\n): VerbalGame {\n  let incorrect = getRandomIndexes(length);\n\n  const turns = shuffle(words)\n    .slice(0, length)\n    .map((word, index) => {\n      return {\n        incorrect: incorrect[index],\n        text: incorrect[index] ? misspell(word) : word,\n        explanation: word,\n      };\n    });\n  return {\n    turns: turns,\n  };\n}\n\nfunction getRandomIndex(max: number, validator: (number) => boolean): number {\n  let i = 0;\n  while (i < 10) {\n    const candidate = Math.floor(Math.random() * max);\n    if (validator(candidate)) {\n      return candidate;\n    }\n    i++;\n  }\n  // arbitrarily, if we can't find a match after 10, then the data is probably wrong\n  throw new Error(\"invalid data\");\n}\n\nexport function getSwappedWordsGamePlan(\n  pairSets: Array<Array<[string, string]>>,\n  length: number\n): VerbalGame {\n  // need to get the actual length\n  const setsToPick = shuffle([...pairSets]);\n\n  // whole groups should be randomly selected until we have more than the desired length\n  const pickedSets: Array<Array<[string, string]>> = [];\n  let currentLength = 0;\n  let currentSetIndex = 0;\n  while (currentLength < length && currentSetIndex < setsToPick.length) {\n    pickedSets.push(setsToPick[currentSetIndex]);\n    currentLength += setsToPick[currentSetIndex].length;\n    currentSetIndex++;\n  }\n\n  const incorrect = getRandomIndexes(currentLength);\n  let currentIndex = 0;\n\n  const turns: Array<{ incorrect: boolean, text: string }> = [];\n\n  pickedSets.forEach((pickedSet, pickedSetIndex) => {\n    pickedSet.forEach((pair) => {\n      if (incorrect[currentIndex]) {\n        // words can only be swapped within a group\n        const otherIndex = getRandomIndex(pickedSet.length, (index) => {\n          // the swap can't be the same word (words can be equal within a group)\n          return (\n            pickedSet[index][1] != pair[1] && pickedSet[index][0] != pair[0]\n          );\n        });\n        const mismatchedPair = [pair[0], pickedSet[otherIndex][1]];\n        turns.push({\n          text: mismatchedPair.join(\" - \"),\n          incorrect: true,\n          explanation:\n            pair.join(\" - \") + \"\\n\" + pickedSet[otherIndex].join(\" - \"),\n        });\n      } else {\n        turns.push({\n          text: pair.join(\" - \"),\n          incorrect: false,\n          explanation: pair.join(\" - \"),\n        });\n      }\n      currentIndex++;\n    });\n  });\n\n  // put all pairs into an array, shuffle, and return\n  return {\n    turns: shuffle(turns),\n  };\n}\n\nexport function getEnglishGamePlan(): VerbalGame {\n  return getMangledWordGamePlan(\n    englishWords.filter((word) => word.length > 5),\n    30\n  );\n}\n","// @flow\nimport * as React from \"react\";\nimport { Dimensions } from \"react-native\";\nimport { View } from \"react-native\";\n\ntype Props = {\n  children?: React.Node,\n  inputKey: string,\n  onKeyPress: () => void,\n};\n\nfunction detectTouchScreen() {\n  var hasTouchScreen = false;\n  if (\"maxTouchPoints\" in navigator) {\n    hasTouchScreen = navigator.maxTouchPoints > 0;\n  } else if (\"msMaxTouchPoints\" in navigator) {\n    hasTouchScreen = (navigator: any).msMaxTouchPoints > 0;\n  } else {\n    var mQ = window.matchMedia && matchMedia(\"(pointer:coarse)\");\n    if (mQ && mQ.media === \"(pointer:coarse)\") {\n      hasTouchScreen = !!mQ.matches;\n    } else if (\"orientation\" in window) {\n      hasTouchScreen = true; // deprecated, but good fallback\n    } else {\n      // Only as a last resort, fall back to user agent sniffing\n      var UA = navigator.userAgent;\n      hasTouchScreen =\n        /\\b(BlackBerry|webOS|iPhone|IEMobile)\\b/i.test(UA) ||\n        /\\b(Android|Windows Phone|iPad|iPod)\\b/i.test(UA);\n    }\n  }\n  return hasTouchScreen;\n}\n\n/* this isn't 100% accurate for our needs. We actually want\nsomething like HAS_KEYBOARD and reverse the conditions below,\nBUT this is close enough for the time being. People on touch\nscreen laptops will be left in the cold :(\n*/\nconst HAS_TOUCH_SCREEN = detectTouchScreen();\n\nexport default class WebKeyboardListener extends React.Component<Props> {\n  componentDidMount = async () => {\n    if (!HAS_TOUCH_SCREEN) {\n      document.addEventListener(\"keydown\", this._onKeyDown);\n    }\n  };\n\n  componentWillUnmount = async () => {\n    if (!HAS_TOUCH_SCREEN) {\n      document.removeEventListener(\"keydown\", this._onKeyDown);\n    }\n  };\n\n  _onKeyDown = (evt: any) => {\n    if (evt.key == this.props.inputKey) {\n      this.props.onKeyPress();\n    }\n  };\n\n  render() {\n    if (!HAS_TOUCH_SCREEN) {\n      return <View>{this.props.children}</View>;\n    }\n    return null;\n  }\n}\n","// @flow\nimport * as React from \"react\";\n\nimport { StyleSheet, Text } from \"react-native\";\n\ntype ButtonType = \"positive\" | \"warning\" | \"negative\" | \"neutral\";\n\nfunction getStyle(type: ButtonType) {\n  switch (type) {\n    case \"positive\":\n      return styles.positive;\n    case \"negative\":\n      return styles.negative;\n  }\n  return styles.neutral;\n}\n\nexport default function LabelButton({\n  onPress,\n  type,\n  label,\n  disabled = false,\n  style,\n}: {\n  type: ButtonType,\n  onPress: () => void,\n  label: string,\n  disabled?: boolean,\n  style?: any,\n}) {\n  if (disabled) {\n    return <Text style={styles.disabled}>{label}</Text>;\n  }\n  return (\n    <Text style={[style, getStyle(type)]} onPress={onPress}>\n      {label}\n    </Text>\n  );\n}\n\nconst styles = StyleSheet.create({\n  positive: {\n    padding: 8,\n    color: \"green\",\n    fontSize: 24,\n  },\n  negative: {\n    padding: 8,\n    color: \"red\",\n    fontSize: 24,\n  },\n  neutral: {\n    padding: 8,\n    color: \"black\",\n    fontSize: 24,\n  },\n  disabled: {\n    padding: 8,\n    color: \"grey\",\n    fontSize: 24,\n  },\n});\n","// @flow\nimport * as React from \"react\";\n\nimport { StyleSheet, View } from \"react-native\";\n\nexport default function Container({ children }: { children?: ?any }) {\n  return (\n    <View style={styles.container}>\n      <View style={styles.subcontainer}>{children}</View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n  },\n  subcontainer: {\n    marginHorizontal: \"auto\",\n    height: \"100%\",\n    maxWidth: 600,\n    width: \"100%\",\n  },\n});\n","// @flow\nimport * as React from \"react\";\n\nimport {\n  Button,\n  Slider,\n  StyleSheet,\n  Switch,\n  Text,\n  TouchableHighlight,\n  View,\n  Platform,\n} from \"react-native\";\nimport WebKeyboardListener from \"./common/WebKeyboardListener\";\nimport type { VerbalGame, VerbalGameResult } from \"./types\";\nimport LabelButton from \"./common/LabelButton\";\nimport Container from \"./common/Container\";\n\nexport type Props = {|\n  onComplete: (VerbalGameResult) => void,\n  game: VerbalGame,\n|};\n\ntype State = {\n  currentIndex: number,\n  mistakes: number,\n  isShowingAnswer: boolean,\n  isCorrect: boolean,\n};\n\nfunction InputElement({\n  type,\n  disabled,\n  onPress,\n  buttonLabel,\n  inputKey,\n}: {\n  type: \"positive\" | \"negative\",\n  buttonLabel: string,\n  disabled: boolean,\n  onPress: () => void,\n  inputKey: string,\n}) {\n  return (\n    <View style={styles.inputContainer}>\n      <LabelButton\n        disabled={disabled}\n        label={buttonLabel}\n        type={type}\n        onPress={onPress}\n      />\n      <WebKeyboardListener inputKey={inputKey} onKeyPress={onPress}>\n        <Text>({inputKey})</Text>\n      </WebKeyboardListener>\n    </View>\n  );\n}\n\nexport default class Menu extends React.Component<Props, State> {\n  state = {\n    currentIndex: 0,\n    mistakes: 0,\n    isShowingAnswer: false,\n    isCorrect: true,\n  };\n\n  _timeoutID: ?TimeoutID;\n\n  _onTimeout = () => {\n    this.continueGame();\n  };\n\n  _onContinue = () => {\n    this.continueGame();\n  };\n\n  continueGame = () => {\n    const currentIndex = this.state.currentIndex + 1;\n    const mistakes = this.state.mistakes;\n    if (currentIndex >= this.props.game.turns.length) {\n      this.props.onComplete({\n        mistakes,\n        length: this.props.game.turns.length,\n      });\n    } else {\n      this.setState({\n        currentIndex,\n        isShowingAnswer: false,\n        isCorrect: true,\n      });\n    }\n  };\n\n  _onPress = (response: boolean) => {\n    const isCorrect =\n      response === !this.props.game.turns[this.state.currentIndex].incorrect;\n\n    const mistakes = this.state.mistakes + (isCorrect ? 0 : 1);\n    this.setState({\n      mistakes,\n      isShowingAnswer: true,\n      isCorrect,\n    });\n    if (isCorrect) {\n      this._timeoutID = setTimeout(this._onTimeout, 500);\n    }\n  };\n\n  _onPositivePress = () => {\n    this._onPress(true);\n  };\n\n  _onNegativePress = () => {\n    this._onPress(false);\n  };\n\n  _renderIcon = () => {\n    if (!this.state.isShowingAnswer) {\n      return null;\n    }\n    if (this.state.isCorrect) {\n      return <Text style={styles.answerText}>✅</Text>;\n    }\n    return <Text style={styles.answerText}>🚫</Text>;\n  };\n\n  render() {\n    const answerIcon = this._renderIcon();\n    const buttons =\n      this.state.isShowingAnswer && !this.state.isCorrect ? (\n        <View style={styles.hContainer}>\n          <LabelButton\n            label=\"Continue\"\n            type=\"positive\"\n            onPress={this._onContinue}\n          />\n        </View>\n      ) : (\n        <View style={styles.hContainer}>\n          <InputElement\n            disabled={this.state.isShowingAnswer}\n            buttonLabel=\"Y\"\n            type=\"positive\"\n            onPress={this._onPositivePress}\n            inputKey={\"a\"}\n          />\n          <View style={{ width: 100 }} />\n          <InputElement\n            disabled={this.state.isShowingAnswer}\n            buttonLabel=\"N\"\n            type=\"negative\"\n            onPress={this._onNegativePress}\n            inputKey={\"l\"}\n          />\n        </View>\n      );\n    return (\n      <Container>\n        <Text style={styles.word}>\n          {this.props.game.turns[this.state.currentIndex].text}\n        </Text>\n        <View style={styles.answerContainer}>{answerIcon}</View>\n        {buttons}\n      </Container>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  word: {\n    width: \"100%\",\n    textAlign: \"center\",\n    fontSize: 30,\n    marginTop: 40,\n    marginBottom: 40,\n  },\n  hContainer: {\n    flexDirection: \"row\",\n    padding: 8,\n    margin: \"auto\",\n    width: \"100%\",\n    justifyContent: \"center\",\n  },\n  inputContainer: {\n    alignItems: \"center\",\n  },\n  answerContainer: {\n    height: 50,\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  answerText: {\n    fontSize: 40,\n  },\n});\n","// @flow\nimport * as React from \"react\";\n\nimport {\n  Button,\n  Slider,\n  StyleSheet,\n  Switch,\n  Text,\n  TouchableHighlight,\n  View,\n} from \"react-native\";\nimport type { VerbalGame } from \"./types\";\nimport LabelButton from \"./common/LabelButton\";\nimport Container from \"./common/Container\";\n\nexport type Props = {|\n  now: number,\n  results: ?(VerbalLogEntry[]),\n  options: Array<{ getGamePlan: () => VerbalGame, name: string }>,\n  setGame: (VerbalGame) => void,\n|};\n\nexport default function Menu(props: Props) {\n  const { setGame } = props;\n\n  const buttons = props.options.map(({ getGamePlan, name }) => {\n    return (\n      <LabelButton\n        key={name}\n        label={\"Play\"}\n        onPress={() => setGame(getGamePlan())}\n        type=\"positive\"\n        style={styles.labelButton}\n      />\n    );\n  });\n\n  /** todo, only render scrollview on iOS/Android */\n  return <Container>{buttons}</Container>;\n}\n\nconst styles = StyleSheet.create({ labelButton: { alignSelf: \"center\" } });\n","// @flow\nimport React, { useState } from \"react\";\n\nimport type { VerbalGameResult, VerbalGame } from \"./types\";\nimport { getEnglishGamePlan } from \"./gameLogic\";\nimport Level from \"./Level\";\nimport Menu from \"./Menu\";\n\nconst OPTIONS = [{ name: \"Play\", getGamePlan: getEnglishGamePlan }];\n\nexport default function Verbal() {\n  const [game, setGame] = useState((null: ?VerbalGame));\n  if (game == null) {\n    return <Menu options={OPTIONS} setGame={setGame} />;\n  } else {\n    const onComplete = (result: VerbalGameResult) => {\n      window.top.postMessage(window.location.href + \" - complete\", \"*\");\n\n      setGame(null);\n    };\n\n    return <Level game={game} onComplete={onComplete} />;\n  }\n}\n","// @flow\nimport * as React from \"react\";\nimport Verbal from \"./src/Verbal.js\";\n\nexport default function App(props: any) {\n  return <Verbal {...props} />;\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/verbal-spelling-check/expo-service-worker.js', { scope: '/verbal-spelling-check/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}